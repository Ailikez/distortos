{% set pinController = iterateNodes(dictionary, '', [('compatible$', 'ST,STM32-GPIOv[12]-pin-controller$')]) | first %}
{% if pinController != None %}
{% set sanitizedBoard = dictionary['/']['properties']['compatible'][0] | sanitize %}
{% set stm32GpioVersion = pinController[1]['properties']['compatible'][0][14] %}
{% for path, gpioLeds in iterateNodes(dictionary, '', [('compatible', 'gpio-leds')])
		if gpioLeds['properties']['status'][0] == 'okay' and
		iterateNodes(dictionary, path + '/', [('status$', 'okay$')]) | first != None %}
{% set sanitizedLeds = path.rpartition('/')[2] | sanitize('[^0-9A-Za-z]') %}
('source/board/boardTemplates-dts/gpio-leds.cpp.jinja',
		{'path': '{{ path }}',
				'sanitizedLeds': '{{ sanitizedLeds }}',
				'chipOutputPinImport':
						'source/chip/STM32/peripherals/GPIOv{{ stm32GpioVersion }}/boardTemplates-dts/ChipOutputPin.jinja'},
		'{{ sanitizedBoard }}-{{ sanitizedLeds }}.cpp'),
{% endfor %}
{% endif %}
